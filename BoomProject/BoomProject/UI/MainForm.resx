<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="menuStrip1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        eP+ckHj/nJB4/5yQeP+ckHj/nJB4/5yQeP+ckHj/nJB4/5yQeP+ckHj/nJB4/5yQeP+ckHj/nJB4/5yQ
        eP+KfmX/e29U/3puVP96blT/em5Uz3lrURMAAAAAAAAAAAAAAAAAAAAAAAAAAJmMcxSbkXjSnJB4/5yQ
        eP+ckHj/nJB4/5yQeP+ckHj/nJB4/5yQeP+ckHj/nJB4/5yQeP+ckHj/nJB4/5yQeP+ckHj/nJB4/5yQ
        eP+ckHj/nJB4/5yQeP+QhGz/e29U/3tvVc93ZlUPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJyR
        eXShlX//oJZ+/5yQeP+ckHj/oZV//6CWfv+ckHj/nJB4/6GVf/+gln7/nJB4/5yQeP+hlX//oJZ+/5yQ
        eP+ckHj/oZV//6CWfv+ckHj/nJB4/6GVf/+Rh27/hnpgqgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAnZB5uLGnlf+xqJT/nJB4/5yQeP+xp5X/saiU/5yQeP+ckHj/saeV/7GolP+ckHj/nJB4/7Gn
        lf+xqJT/nJB4/5yQeP+xp5X/saiU/5yQeP+ckHj/saeV/7GolP+PhGvLAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACckHjanJB4/5yQeP+ckHj/nJB4/5yQeP+ckHj/nJB4/5yQeP+ckHj/nJB4/5yQ
        eP+ckHj/nJB4/5yQeP+ckHj/nJB4/5yQeP+ckHj/nJB4/5yQeP+ckHj/nJB4/52QeNcAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAxL6vVriwnfu3r53/t6+d/7evnf+3r53/t6+d/7evnf+3r53/t6+d/7ev
        nf+3r53/t6+d/7evnf+3r53/t6+d/7evnf+3r53/t6+d/7evnf+3r53/t6+d/7evnf+3r53/t7Cd+8a9
        sVUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADFv7BUurKh/Lqxof+6saH/urGh/7qxof+6saH/urGh/7qx
        of+6saH/urGh/7qxof+6saH/urGh/7qxof+6saH/urGh/7qxof+6saH/urGh/7qxof+6saH/urGh/7qx
        of+5sqH8xb6vUwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACckHjbnJB4/5yQeP+ckHj/nJB4/5yQ
        eP+ckHj/nJB4/5yQeP+ckHj/nJB4/5yQeP+ckHj/nJB4/5yQeP+ckHj/nJB4/5yQeP+ckHj/nJB4/5yQ
        eP+ckHj/nJB4/5yQeNgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ2QebiyqJb/samV/5yQ
        eP+ckHj/sqiW/7Gplf+ckHj/nJB4/7Kolv+xqZX/nJB4/5yQeP+yqJb/samV/5yQeP+ckHj/sqiW/7Gp
        lf+ckHj/nJB4/7Kolv+xqZX/nJB4tgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAnI94eaGV
        f/+gln7/nJB4/5yQeP+hlX//oJZ+/5yQeP+ckHj/oZV//6CWfv+ckHj/nJB4/6GVf/+gln7/nJB4/5yQ
        eP+hlX//oJZ+/5yQeP+ckHj/oZV//6CWfv+dkHh1AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJmM
        cxSbkXjSnJB4/5yQeP+ckHj/nJB4/5yQeP+ckHj/nJB4/5yQeP+ckHj/nJB4/5yQeP+ckHj/nJB4/5yQ
        eP+ckHj/nJB4/5yQeP+ckHj/nJB4/5yQeP+ckHj/nJB4/52PeNChlHkTAAAAAAAAAAAAAAAAAAAAAAAA
        AACcjnESnI940JyQeP+ckHj/nJB4/5yQeP+ckHj/nJB4/5yQeP+ckHj/nJB4/5yQeP+ckHj/nJB4/5yQ
        eP+ckHj/nJB4/5yQeP+ckHj/nJB4/5yQeP+ckHj/nJB4/5yQeP+ckHj/nJB4/5yQd8+cjnESAAAAAAAA
        AAAAAAAAn4+AEJyQeLeckHjInZB4ppyRd42dkHj2nJB4/52Se/+jmYL/nJB4/5yQeP+ckHj/nJB4/5yQ
        eP+ckHj/nJB4/5yQeP+ckHj/nJB4/5yQeP+ckHj/nJB4/5yQeP+ckHj/m5B39puQeIydkHimnJB4yJyQ
        eLaZiHcPAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJyRd1ickHj+qZ+K/8W+r/+yqJX/nZF5/5yQ
        eP+ckHj/nJB4/5yQeP+ckHj/nJB4/5yQeP+ckHj/nJB4/5yQeP+ckHj/nJB4/5yQeP6dkXdWAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ2PeXKckHj+rKOO/8S8
        rv+/t6f/q6GN/56Te/+ckHj/nJB4/5yQeP+ckHj/nJB4/5yQeP+ckHj/nJB4/5yQeP+ckHj9nY95cAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJ2R
        d6mckHj/oZZ//7etnP/EvrD/xL2v/722pv+6sqH/tq6c/6GVfv+ckHj/nJB4/5yQeP+ckHj/nJB4/52Q
        eKYAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAnJB4xJyQeP+dkHj5nJB4/Z+UfP+qoYz/s6mX/7etnP+2rZv/oJV+/5yQeP+ckHj/nJB3/pyQ
        d/qckHj/nJF4wgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAJ+fgAickHj4nJB33p6SeSqZj3oZnJB4apyPeLmckHjrnJB4/5yQeP+dkXnqnZB5uJuP
        d2mflXUYmo53K5yQeN+ckHj4kpJtBwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAmpF3OpyQeMaZj3oZAAAAAAAAAAAAAAAAAAAAAJ6PejKckHj/nJB4/5yS
        eDEAAAAAAAAAAAAAAAAAAAAAmY96GZyQeMadj3k5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACcjngkmZlmBQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAJyQ
        edyckHjbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAmZlmBZyOeCQAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAnJF4hpuQeYUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAACeknkqm492KQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP///////n////5///9+fv//MAz//wAA//8AAP/+AAB//gAAf8AA
        AAPgAAAH8AAAD/gAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/4AAAf8AAAD+AAAAfAAAAD/gAAf/8A
        AP//AAD//wAA//84HP//fn7///5////+f///////
</value>
  </data>
</root>